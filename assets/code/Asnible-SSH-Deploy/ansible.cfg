# ==============================================================================
# ansible.cfg — controller configuration
#
# Purpose:
#   Baseline, readable Ansible config for the /opt/ansible workspace.
#   Tuned for safety (host key checking), predictable output, and role discovery.
#
# Notes:
#   - Keep inventory and roles under /opt/ansible to simplify paths.
#   - Leave optional sections commented until you need them.
#   - Per-run overrides are possible via environment, e.g.
#       ANSIBLE_STDOUT_CALLBACK=minimal ansible-playbook ...
# ==============================================================================

[defaults]
# Output style shown in your terminal. Alternatives: minimal | dense | actionable | json
# Use `ansible-doc -t callback -l` to see what's available on this install.
stdout_callback = default

# Enables extra callback features (timestamps, etc.) for some callbacks.
bin_ansible_callbacks = True

# Primary inventory file (YAML).
inventory = /opt/ansible/inventory/dev/hosts.yml

# Parallelism: number of hosts to operate on at once.
forks = 25

# SSH operation timeout (seconds) per task connection.
timeout = 30

# Security: verify host keys and refuse unknown hosts (recommended).
host_key_checking = True

# Don’t create *.retry files on failures (keeps repo tidy).
retry_files_enabled = False

# Auto-detect the correct Python on the target without noisy warnings.
interpreter_python = auto_silent

# Where Ansible looks for roles (your in-repo roles live here).
roles_path = /opt/ansible/playbooks/roles

# Trim noisy output without changing the callback (uncomment if desired)
# display_skipped_hosts = False
# deprecation_warnings   = False
# display_ok_hosts       = False

[privilege_escalation]
# Use sudo for privilege escalation by default.
become = True
become_method = sudo
# become_user = root     # default is root; uncomment to be explicit.

# ------------------------------------------------------------------------------
# Optional: SSH connection tuning
# Uncomment/adjust if you need better throughput or to work around server quirks.
# ------------------------------------------------------------------------------
#[ssh_connection]
# Reduce SSH round-trips (requires !requiretty in sudoers for the remote user).
# pipelining = True
#
# Prefer legacy scp if your server lacks a working SFTP subsystem:
# transfer_method = scp
# scp_if_ssh = True
# scp_extra_args = -O          # force legacy scp protocol on newer OpenSSH
#
# Keep SSH multiplexed connections alive & responsive:
# ssh_args = -o ControlMaster=auto -o ControlPersist=60s -o ServerAliveInterval=30 -o ServerAliveCountMax=10
# retries = 3
#
# If you use a ProxyJump or other SSH options heavily, keep them in ~/.ssh/config.
