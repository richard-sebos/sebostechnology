

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Sebos Technology</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2025-10-05T12:11:10-06:00</updated>
  <author>
    <name>Richard Chamberlain</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> © 2025 Richard Chamberlain </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Linux Printing with CUPS</title>
    <link href="http://localhost:4000/posts/CUPS/" rel="alternate" type="text/html" title="Linux Printing with CUPS" />
    <published>2025-09-24T04:00:00-06:00</published>
  
    <updated>2025-09-24T04:00:00-06:00</updated>
  
    <id>http://localhost:4000/posts/CUPS/</id>
    <content type="text/html" src="http://localhost:4000/posts/CUPS/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="Infrastructure" />
    
  

  <summary>1. Introduction

Printing is one of those technologies people rarely think about—until it stops working. Despite the rise of paperless workflows, printing remains deeply embedded in both personal and professional environments. Whether it’s the receipt from your local coffee shop, the label on an Amazon package, or a contract printed in an office, some form of printing made it possible.



Table...</summary>

  </entry>

  
  <entry>
    <title>ESP32 Debug Helper for macOS (with MicroPython)</title>
    <link href="http://localhost:4000/posts/Mac-ESP32/" rel="alternate" type="text/html" title="ESP32 Debug Helper for macOS (with MicroPython)" />
    <published>2025-09-21T04:00:00-06:00</published>
  
    <updated>2025-09-21T04:00:00-06:00</updated>
  
    <id>http://localhost:4000/posts/Mac-ESP32/</id>
    <content type="text/html" src="http://localhost:4000/posts/Mac-ESP32/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="ESP32" />
    
    <category term="MicroPython" />
    
    <category term="macOS" />
    
    <category term="Development" />
    
  

  <summary>Introduction

As a Linux administrator, I spend much of my time working on the command line. When I decided to dive back into ESP32 programming, I initially installed the Arduino IDE. However, I quickly realized I wanted a different way to interact with my ESP32 boards — one that better fit the way I like to work.

Since I planned to use MicroPython rather than C++ with Arduino, the toolchain a...</summary>

  </entry>

  
  <entry>
    <title>Customizing Password Policies in Linux Using PAM and User Groups</title>
    <link href="http://localhost:4000/posts/Tier-Passwds/" rel="alternate" type="text/html" title="Customizing Password Policies in Linux Using PAM and User Groups" />
    <published>2025-09-21T04:00:00-06:00</published>
  
    <updated>2025-09-21T04:00:00-06:00</updated>
  
    <id>http://localhost:4000/posts/Tier-Passwds/</id>
    <content type="text/html" src="http://localhost:4000/posts/Tier-Passwds/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="Security" />
    
  

  <summary>Introduction

In the previous article, we explored how to set up accounts for different types of users, including RF Guns, Application Users, Application Developers, and System Administrators, with a focus on account locks and expirations. Building on that foundation, this article examines how to implement password criteria tailored to each of these user types.



Table of Contents


  Introduc...</summary>

  </entry>

  
  <entry>
    <title>How to Secure Different User Types in Linux: A Guide for IT Teams</title>
    <link href="http://localhost:4000/posts/Users-Tiers/" rel="alternate" type="text/html" title="How to Secure Different User Types in Linux: A Guide for IT Teams" />
    <published>2025-09-05T04:00:00-06:00</published>
  
    <updated>2025-09-05T04:00:00-06:00</updated>
  
    <id>http://localhost:4000/posts/Users-Tiers/</id>
    <content type="text/html" src="http://localhost:4000/posts/Users-Tiers/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="Security" />
    
  

  <summary>Introduction

In my previous article, we discussed how to access a Linux application via SSH and the methods for securing SSH itself. Now, we turn our attention to securing the users of these systems. Most Linux environments I set up typically have two primary classes of users: Linux Administrators and Application Administrators. These roles often involve straightforward hardening strategies. H...</summary>

  </entry>

  
  <entry>
    <title>Secure SSH Shell Applications</title>
    <link href="http://localhost:4000/posts/SSH-App/" rel="alternate" type="text/html" title="Secure SSH Shell Applications" />
    <published>2025-08-31T06:00:00-06:00</published>
  
    <updated>2025-08-31T21:07:56-06:00</updated>
  
    <id>http://localhost:4000/posts/SSH-App/</id>
    <content type="text/html" src="http://localhost:4000/posts/SSH-App/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="DevOps" />
    
    <category term="Linux" />
    
    <category term="Security" />
    
  

  <summary>While modern software often leans heavily on graphical interfaces and web applications, command-line-based applications are still very much alive and in use. In fact, SSH-based shell applications remain a lightweight, efficient way for users to interact with terminal-based programs. However, if not configured carefully, these applications can inadvertently provide users with unrestricted shell ...</summary>

  </entry>

</feed>


