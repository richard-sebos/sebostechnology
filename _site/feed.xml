

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Sebos Technology</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2025-08-12T19:51:47-06:00</updated>
  <author>
    <name>Richard Chamberlain</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> © 2025 Richard Chamberlain </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Boost SSH Speed with SSH Multiplexing</title>
    <link href="http://localhost:4000/posts/SSH-Multiplex/" rel="alternate" type="text/html" title="Boost SSH Speed with SSH Multiplexing" />
    <published>2025-08-03T04:00:00-06:00</published>
  
    <updated>2025-08-03T04:00:00-06:00</updated>
  
    <id>http://localhost:4000/posts/SSH-Multiplex/</id>
    <content type="text/html" src="http://localhost:4000/posts/SSH-Multiplex/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="SSH" />
    
  

  <summary>Introduction to SSH Multiplexing

In previous discussions, we’ve focused on making remote server access via SSH more secure. This time, let’s shift our focus to performance and usability—specifically, how to make SSH connections faster and more efficient. Enter SSH Multiplexing, a feature that significantly improves connection times by reusing existing SSH sessions.

Table of Contents


  Intro...</summary>

  </entry>

  
  <entry>
    <title>Just-in-Time (JIT) SSH Access with a Bastion Host on Proxmox VE</title>
    <link href="http://localhost:4000/posts/JIT-Access/" rel="alternate" type="text/html" title="Just-in-Time (JIT) SSH Access with a Bastion Host on Proxmox VE" />
    <published>2025-07-27T02:00:00-06:00</published>
  
    <updated>2025-07-27T16:25:55-06:00</updated>
  
    <id>http://localhost:4000/posts/JIT-Access/</id>
    <content type="text/html" src="http://localhost:4000/posts/JIT-Access/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Security" />
    
    <category term="Proxmox" />
    
  

  <summary>Introduction

Strong security doesn’t have to be complicated. This guide walks through setting up a secure, time-limited SSH access system using a bastion host in a Proxmox Virtual Environment (VE). It combines a few simple tools and practices—network rules, SSH certificates, and a bit of scripting—to give you a flexible and secure way to manage who can access your servers, when, and for how lo...</summary>

  </entry>

  
  <entry>
    <title>Using chroot to Restrict Linux Applications for Enhanced Security</title>
    <link href="http://localhost:4000/posts/SSH-chroot/" rel="alternate" type="text/html" title="Using chroot to Restrict Linux Applications for Enhanced Security" />
    <published>2025-07-20T02:00:00-06:00</published>
  
    <updated>2025-07-21T19:09:22-06:00</updated>
  
    <id>http://localhost:4000/posts/SSH-chroot/</id>
    <content type="text/html" src="http://localhost:4000/posts/SSH-chroot/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="Security" />
    
  

  <summary>Introduction

Modern Linux distributions often include hundreds or even thousands of individual programs. Each one of these programs adds another potential entry point for malicious actors seeking to compromise your system. This raises an important question: what if you could run an application in isolation, without the need to introduce even more applications or dependencies? This is where Lin...</summary>

  </entry>

  
  <entry>
    <title>Stop Reusing Old SSH Keys How to Use a Signing CA for Expiring SSH Auth</title>
    <link href="http://localhost:4000/posts/OpenSSH-Cert-SSH-Keys/" rel="alternate" type="text/html" title="Stop Reusing Old SSH Keys How to Use a Signing CA for Expiring SSH Auth" />
    <published>2025-07-13T04:00:00-06:00</published>
  
    <updated>2025-07-21T19:14:49-06:00</updated>
  
    <id>http://localhost:4000/posts/OpenSSH-Cert-SSH-Keys/</id>
    <content type="text/html" src="http://localhost:4000/posts/OpenSSH-Cert-SSH-Keys/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="Security" />
    
  

  <summary>Introduction to SSH Authentication Keys

SSH keys are simple to create and are usually one of the first tools Linux administrators learn to use. They provide a secure, passwordless method to access remote servers by pairing a private key on the local machine with a public key stored on the server. However, a key limitation is that traditional SSH keys, generated using tools like ssh-keygen, do ...</summary>

  </entry>

  
  <entry>
    <title>SSH Over Tor Cool, Practical, or Just Tinfoil Hats?</title>
    <link href="http://localhost:4000/posts/SSH-Through-Tor/" rel="alternate" type="text/html" title="SSH Over Tor Cool, Practical, or Just Tinfoil Hats?" />
    <published>2025-07-08T04:00:00-06:00</published>
  
    <updated>2025-07-21T19:14:49-06:00</updated>
  
    <id>http://localhost:4000/posts/SSH-Through-Tor/</id>
    <content type="text/html" src="http://localhost:4000/posts/SSH-Through-Tor/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="Networking" />
    
  

  <summary>Introduction

When I first encountered the idea of tunneling SSH traffic over Tor, two things came to mind: it sounded incredibly cool—and frustratingly complex. There was also a sense that it might edge me a little closer to feeling like a hacker. This article walks through how SSH over Tor works, how I set it up myself, and whether it’s actually practical… or merely a tinfoil‑hat experiment.
...</summary>

  </entry>

</feed>


