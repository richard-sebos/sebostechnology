

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Sebos Technology</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2025-06-22T09:45:53-06:00</updated>
  <author>
    <name>Richard Chamberlain</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> ¬© 2025 Richard Chamberlain </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>SSH Authentication Key Rotation: Why and How to Expire SSH Keys</title>
    <link href="http://localhost:4000/posts/SSH-Auth-Key-Rotation/" rel="alternate" type="text/html" title="SSH Authentication Key Rotation: Why and How to Expire SSH Keys" />
    <published>2025-06-22T04:00:00-06:00</published>
  
    <updated>2025-06-22T04:00:00-06:00</updated>
  
    <id>http://localhost:4000/posts/SSH-Auth-Key-Rotation/</id>
    <content type="text/html" src="http://localhost:4000/posts/SSH-Auth-Key-Rotation/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="Security" />
    
  

  <summary>Introduction

When setting up a new Linux server, it‚Äôs common practice to configure SSH authentication using public keys. Often, these keys are reused indefinitely‚Äîsometimes for weeks, months, or even years. While SSH keys provide a robust layer of security, they can also introduce risk if not managed properly. Unlike passwords, SSH keys are not usually rotated or set to expire, leading to a fa...</summary>

  </entry>

  
  <entry>
    <title>Secure SSH Access with Modular Policy Files</title>
    <link href="http://localhost:4000/posts/SSH-Polices/" rel="alternate" type="text/html" title="Secure SSH Access with Modular Policy Files" />
    <published>2025-06-15T04:00:00-06:00</published>
  
    <updated>2025-06-15T04:00:00-06:00</updated>
  
    <id>http://localhost:4000/posts/SSH-Polices/</id>
    <content type="text/html" src="http://localhost:4000/posts/SSH-Polices/" />
    <author>
      <name>Richard Chamberlaiin</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="Security" />
    
    <category term="DevOps" />
    
  

  <summary>Introduction

When it comes to securing SSH, there are plenty of guides and videos focusing on the ‚Äúfirst 10 things to change‚Äù in your SSH setup. However, this article goes beyond that. We focus on how to group SSH settings into modular, reusable security policy files‚Äîproviding a flexible and maintainable way to secure your SSH server. By organizing configuration options into purpose-built file...</summary>

  </entry>

  
  <entry>
    <title>Secure Remote Deployments with SSH Agent Forwarding and GitHub</title>
    <link href="http://localhost:4000/posts/Agent-Forwarding/" rel="alternate" type="text/html" title="Secure Remote Deployments with SSH Agent Forwarding and GitHub" />
    <published>2025-06-05T04:00:00-06:00</published>
  
    <updated>2025-06-05T04:00:00-06:00</updated>
  
    <id>http://localhost:4000/posts/Agent-Forwarding/</id>
    <content type="text/html" src="http://localhost:4000/posts/Agent-Forwarding/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="DevOps" />
    
    <category term="Security" />
    
  

  <summary>A practical guide to secure remote deployments using SSH Agent Forwarding and GitHub SSH key integration‚Äîno private key exposure on remote hosts.</summary>

  </entry>

  
  <entry>
    <title>üîê AppArmor and ROS2 ‚Äì The Article I Tried Not to Write</title>
    <link href="http://localhost:4000/posts/AppArmor-ROS2/" rel="alternate" type="text/html" title="üîê AppArmor and ROS2 ‚Äì The Article I Tried Not to Write" />
    <published>2025-06-03T06:11:00-06:00</published>
  
    <updated>2025-06-04T08:37:02-06:00</updated>
  
    <id>http://localhost:4000/posts/AppArmor-ROS2/</id>
    <content type="text/html" src="http://localhost:4000/posts/AppArmor-ROS2/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Robotics" />
    
    <category term="ROS2 Install Series" />
    
    <category term="Security" />
    
    <category term="Robotics Security" />
    
    <category term="Linux System Hardening" />
    
    <category term="ROS2 Development" />
    
    <category term="Cybersecurity Best Practices" />
    
    <category term="Open-Source Security Tools" />
    
    <category term="Industrial IoT Security" />
    
    <category term="DevSecOps for Robotics" />
    
  

  <summary>Discover why AppArmor may not be ideal for ROS2 development with colcon. Learn from real-world insights comparing AppArmor, SELinux, and Oracle Linux in robotics system security.</summary>

  </entry>

  
  <entry>
    <title>üõ°Ô∏è Blocking Admin SSH Logins with SELinux (`ssh_sysadm_login`)</title>
    <link href="http://localhost:4000/posts/SSH-Admin_SELinux/" rel="alternate" type="text/html" title="üõ°Ô∏è Blocking Admin SSH Logins with SELinux (`ssh_sysadm_login`)" />
    <published>2025-06-01T06:11:00-06:00</published>
  
    <updated>2025-06-01T19:46:41-06:00</updated>
  
    <id>http://localhost:4000/posts/SSH-Admin_SELinux/</id>
    <content type="text/html" src="http://localhost:4000/posts/SSH-Admin_SELinux/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Linux Security" />
    
    <category term="SSH Hardening" />
    
    <category term="System Administration" />
    
    <category term="Server Security" />
    
    <category term="User Management" />
    
  

  <summary>In this guide, you‚Äôll learn how to use SELinux to block direct SSH access for privileged users, enforcing access through a restricted jump account instead. By disabling the ssh_sysadm_login boolean and mapping users to the sysadm_u role, you gain a policy-enforced control point that hardens your system against misconfiguration, privilege abuse, and lateral movement.
Because true security doesn‚Äô...</summary>

  </entry>

</feed>


