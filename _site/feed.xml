

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Sebos Technology</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2025-07-20T06:52:43-06:00</updated>
  <author>
    <name>Richard Chamberlain</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> © 2025 Richard Chamberlain </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Using chroot to Restrict Linux Applications for Enhanced Security</title>
    <link href="http://localhost:4000/posts/SSH-chroot/" rel="alternate" type="text/html" title="Using chroot to Restrict Linux Applications for Enhanced Security" />
    <published>2025-07-20T02:00:00-06:00</published>
  
    <updated>2025-07-20T02:00:00-06:00</updated>
  
    <id>http://localhost:4000/posts/SSH-chroot/</id>
    <content type="text/html" src="http://localhost:4000/posts/SSH-chroot/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="Security" />
    
  

  <summary>Introduction

Modern Linux distributions often include hundreds or even thousands of individual programs. Each one of these programs adds another potential entry point for malicious actors seeking to compromise your system. This raises an important question: what if you could run an application in isolation, without the need to introduce even more applications or dependencies? This is where Lin...</summary>

  </entry>

  
  <entry>
    <title>Stop Reusing Old SSH Keys How to Use a Signing CA for Expiring SSH Auth</title>
    <link href="http://localhost:4000/posts/OpenSSH-Cert-SSH-Keys/" rel="alternate" type="text/html" title="Stop Reusing Old SSH Keys How to Use a Signing CA for Expiring SSH Auth" />
    <published>2025-07-13T04:00:00-06:00</published>
  
    <updated>2025-07-20T04:17:34-06:00</updated>
  
    <id>http://localhost:4000/posts/OpenSSH-Cert-SSH-Keys/</id>
    <content type="text/html" src="http://localhost:4000/posts/OpenSSH-Cert-SSH-Keys/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="Security" />
    
  

  <summary>Introduction to SSH Authentication Keys

SSH keys are simple to create and are usually one of the first tools Linux administrators learn to use. They provide a secure, passwordless method to access remote servers by pairing a private key on the local machine with a public key stored on the server. However, a key limitation is that traditional SSH keys, generated using tools like ssh-keygen, do ...</summary>

  </entry>

  
  <entry>
    <title>SSH Over Tor Cool, Practical, or Just Tinfoil Hats?</title>
    <link href="http://localhost:4000/posts/SSH-Through-Tor/" rel="alternate" type="text/html" title="SSH Over Tor Cool, Practical, or Just Tinfoil Hats?" />
    <published>2025-07-08T04:00:00-06:00</published>
  
    <updated>2025-07-20T04:17:34-06:00</updated>
  
    <id>http://localhost:4000/posts/SSH-Through-Tor/</id>
    <content type="text/html" src="http://localhost:4000/posts/SSH-Through-Tor/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="Networking" />
    
  

  <summary>Introduction

When I first encountered the idea of tunneling SSH traffic over Tor, two things came to mind: it sounded incredibly cool—and frustratingly complex. There was also a sense that it might edge me a little closer to feeling like a hacker. This article walks through how SSH over Tor works, how I set it up myself, and whether it’s actually practical… or merely a tinfoil‑hat experiment.
...</summary>

  </entry>

  
  <entry>
    <title>Monitoring Robot Network Traffic with Suricata</title>
    <link href="http://localhost:4000/posts/Suricata-Reporting/" rel="alternate" type="text/html" title="Monitoring Robot Network Traffic with Suricata" />
    <published>2025-07-01T03:00:00-06:00</published>
  
    <updated>2025-07-08T19:01:23-06:00</updated>
  
    <id>http://localhost:4000/posts/Suricata-Reporting/</id>
    <content type="text/html" src="http://localhost:4000/posts/Suricata-Reporting/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Robotics" />
    
    <category term="Networking" />
    
  

  <summary>Introduction

In a previous phase of this robotics project, Suricata was installed as part of the initial system build. At that stage, only a few basic rules were added for initial monitoring purposes. Now that the core application stack is largely in place, it’s time to take a deeper look into how the robot is interacting with the network. Understanding these interactions is critical not only ...</summary>

  </entry>

  
  <entry>
    <title>Using a Jump Server and SSH ProxyJump in Your Homelab</title>
    <link href="http://localhost:4000/posts/Jump-Server/" rel="alternate" type="text/html" title="Using a Jump Server and SSH ProxyJump in Your Homelab" />
    <published>2025-06-29T02:00:00-06:00</published>
  
    <updated>2025-06-29T17:02:26-06:00</updated>
  
    <id>http://localhost:4000/posts/Jump-Server/</id>
    <content type="text/html" src="http://localhost:4000/posts/Jump-Server/" />
    <author>
      <name>Richard Chamberlain</name>
    </author>

  
    
    <category term="Linux" />
    
    <category term="Networking" />
    
    <category term="Security" />
    
  

  <summary>What Is a Jump Server (or Bastion Host)?

If you’re running multiple Linux servers in your homelab or a small network, having a centralized way to access them can save a lot of time and improve security. This is where a jump server—also called a bastion host—comes into play.

A jump server acts as a secure gateway between your workstation and your internal systems. Instead of connecting to each...</summary>

  </entry>

</feed>


